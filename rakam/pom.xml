<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>rakam-root</artifactId>
        <groupId>org.rakam</groupId>
        <version>0.7-SNAPSHOT</version>
    </parent>

    <artifactId>rakam</artifactId>
    <name>rakam</name>
    <description>Rakam main module</description>

    <properties>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-presto-kafka</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-clickhouse</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-aws</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.13</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-ui</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>1.0-rc2</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-presto</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-mapper-geoip-maxmind</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-mapper-geoip-ip2location</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-postgresql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-mapper-website</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-spi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-parser</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-parser</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>rakam-spi</artifactId>
            <type>test-jar</type>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>compiler</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>testing-postgresql-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${air.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.rakam</groupId>
            <artifactId>netty-rest</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>delete-bundle</id>
            <activation>
                <property>
                    <!--
                         Heroku specific environment variable to enable this profile with running Heroku button.
                         Currently, Heroku doesn't provide a good way to pass custom variables to maven at compile time
                         so this is a workaround until we solve this problem.
                         Taken from: http://stackoverflow.com/a/19745561/689144
                          -->
                    <name>env.DYNO</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <executions>
                            <execution>
                                <id>clean-bundle-archive</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>

                                    <filesets>
                                        <fileset>
                                            <followSymlinks>false</followSymlinks>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>rakam-*-SNAPSHOT-bundle.tar.gz</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>json-registry</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <!-- automatically creates the classpath using all project dependencies,
                                     also adding the project build directory -->
                                <classpath/>
                                <argument>org.rakam.SystemRegistryGenerator</argument>
                                <argument>json</argument>
                            </arguments>
                            <outputFile>${project.build.directory}/registry.json</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-config-properties</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <!-- automatically creates the classpath using all project dependencies,
                                     also adding the project build directory -->
                                <classpath/>
                                <argument>org.rakam.SystemRegistryGenerator</argument>
                                <argument>properties</argument>
                            </arguments>
                            <outputFile>${project.build.directory}//config.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.13</version>
                <configuration>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${air.main.basedir}/git.properties</generateGitPropertiesFilename>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assemble</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/resources/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>analyze-only</goal>
                            <goal>analyze-duplicate</goal>
                            <goal>analyze-dep-mgt</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>

                            <ignoredDependencies>
                                <ignoredDependency>com.facebook.presto.hive:hive-apache</ignoredDependency>
                            </ignoredDependencies>

                            <ignoredUnusedDeclaredDependencies>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-mapper-geoip-maxmind
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-mapper-geoip-ip2location
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.getsentry.raven:raven
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-mapper-website
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-presto-kafka
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-presto
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-postgresql
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-aws
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.rakam:rakam-clickhouse
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.facebook.presto:presto-parser
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.avro:avro
                                </ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>